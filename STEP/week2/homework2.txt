宿題２

・ハッシュテーブルでは使わない無駄な空間が生まれてしまう。
・格納するデータサイズNが予想できない場合にテーブルの大きさkを決めるのが難しく、溢れてしまった場合にコードを書き換える必要が出てきてしまうというリスクがある。ツリーはNが増えてもバランスの修正をするだけで良く、あらかじめバランスを取るようなコードを書いておけばコードを書き換える必要がない。
・ハッシュ関数のルールが世界共通でないので、他の人にコードを引き継ぐのが大変。一方、Treeなら引き継ぐ時に詳しい説明をしなくて済む。

# ALEXNOTE
上記は正しいと思います。
さらに、データストレージはRAMの場合とHDDの場合の影響を比較出来ますでしょうか。（木構造への影響も、ハッシュテーブルへの影響も）。
後、ハッシュテーブルの場合は、テーブル溢れなくても、データの中身によって検索時間への悪影響を他に想像出来ますか。

#TANEMOTO
ハッシュはメモリにしかデータを保存することが出来ないのでメモリが溢れてしまった時にハードディスクを読み出さなければいけません。そのため、メモリが溢れた時はO(1)でなくなってしまいます。
ハッシュテーブルは順番を保持することが出来ないのでソート検索をすることが出来ませんが、ツリーを使えばデータをソートして保存することが出来ます。
そのため、データを特定の順序で取り出したい時にはハッシュテーブルの方が時間がかかってしまう可能性があります。
